A=[1,3,2,4,1,5,6,3,4,2,3,5,2,4,7,3,1,8,2,3,4,1,1,2,3,9,7,52,3]
T=[0]*len(A)


import random

# Tworzenie losowej listy liczb całkowitych o określonej długości
length = 1000  # Długość listy
A= [random.randint(1, 10000) for _ in range(length)]

def mearch_sort_down(A,first,last):
    if first>=last:
        return 0
    mid=(first+last)//2
    mearch_sort_down(A, first, mid)
    mearch_sort_down(A,mid+1,last)
    scal(A,first,last,mid)

def scal(A,first,last,mid):
    i=0
    j=0
    Arr_1=A[first:mid+1]
    Arr_2=A[mid+1:last+1]
    cnt=first
    n_1=len(Arr_1)
    n_2=len(Arr_2)
    while i<n_1 and j<n_2:
        if Arr_1[i]<=Arr_2[j]:
            A[cnt]=Arr_1[i]
            i+=1
        else:
            A[cnt]=Arr_2[j]
            j+=1
        cnt+=1
    while i<n_1:
        A[cnt]=Arr_1[i]
        i+=1
        cnt+=1
    while j<n_2:
        A[cnt]=Arr_2[j]
        j+=1
        cnt+=1

def test(A):
    for i in range(len(A)-1):
        if A[i]>A[i+1]:
            return False
    return True


mearch_sort_down(A,0,len(A)-1)
print(A)
print(test(A))
